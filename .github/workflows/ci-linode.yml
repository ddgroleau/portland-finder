name: Deploy to Linode Compute Instance

on:
  push:
    branches: ["main"]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portland-finder:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull and Run Docker Image on Linode Remote Server
        uses: appleboy/ssh-action@master
        env:
          HOST_PORT: ${{ secrets.HOST_PORT }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          APP_KEY: ${{ secrets.APP_KEY }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: HOST_PORT,DOCKERHUB_USERNAME,DB_HOST,DB_PORT,DB_DATABASE,DB_USERNAME,DB_PASSWORD,APP_KEY
          script: |
            export envArray=( $HOST_PORT $DOCKERHUB_USERNAME $DB_HOST $DB_PORT $DB_DATABASE $DB_USERNAME $DB_PASSWORD $APP_KEY) \
            && docker pull ${envArray[1]}/portland-finder \
            && if [[ -z $(docker container ls -a | grep "portland-finder") ]]; \
              then echo "No container found. Starting portland-finder container..."; \
            else docker stop portland-finder && docker rm portland-finder; \
            fi \
            && docker run -d \
            -p "${envArray[0]}":8000 \
            --name portland-finder \
            --restart always \
            -e DB_HOST=${envArray[2]} \
            -e DB_PORT=${envArray[3]} \
            -e DB_DATABASE=${envArray[4]} \
            -e DB_USERNAME=${envArray[5]} \
            -e DB_PASSWORD=${envArray[6]} \
            -e $APP_KEY=${envArray[7]} \
            "${envArray[1]}"/portland-finder \
            && exit \
            && exit 0;
